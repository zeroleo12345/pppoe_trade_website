version: '3.5'

services:

  nginx:
    container_name: pppoe_nginx
    image: nginx:1.14.0-alpine-perl
    ports:      # 外部端口:docker内部端口
      - "80:80"       # 只限于使用docker-compse up时, 会映射到8000端口, 而生产会映射到80端口
      - "443:443"
    volumes:        # 挂载盘(多用于输出程序文件, 日志等)
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./etc/nginx/cert:/etc/nginx/cert:ro
      - ./run/log:/run/log
      - ./dist:/usr/share/nginx/html:ro     # :ro模式: (readonly) https://docs.docker.com/storage/volumes/#choose-the--v-or---mount-flag
    environment:
      LOCALHOST_IP: "${LOCALHOST_IP}"
      NPM_DEV_SERVER_URL: "${NPM_DEV_SERVER_URL}"
    #extra_hosts:
      #npm_dev_server_ip: "${NPM_DEV_SERVER_IP}"    # 映射到 npm dev server
    #network_mode: "host"    # 使用host网络, 不能与参数 networks 共存!
    #entrypoint: "${entrypoint}"
    networks:
        - pppoe_system


  hugo:
    container_name: hugo_blog
    build:
       context: .
       dockerfile: ./docker/hugo/Dockerfile
       # args:
         # - http_proxy=http://192.168.1.199:1080
         # - https_proxy=http://192.168.1.199:1080
    ports:      # 外部端口:docker内部端口
      - "1313:1313"
    volumes:       # 挂载盘(多用于输出程序文件, 日志等)
      - ./blog:/srv/hugo     # 主机路径:docker内部路径.(把主机下的src目录挂在到docker下, 实现边开发, 边调试)
    # entrypoint: /app/bin/web.sh      # docker启动期执行程序
    tty: true
    restart: unless-stopped
    networks:
      - pppoe_system


networks:
  pppoe_system:
    name: pppoe_system_network_name
